# thanks to pymagicc (https://github.com/openclimatedata/pymagicc/blob/master/.travis.yml)
# and iris (https://github.com/SciTools/iris/blob/master/.travis.yml)
# for the inspiration for this file
language: python
dist: xenial
sudo: required
python:
  - "3.7"

before_install:
  - sudo apt-get update
  - sudo apt-get install git-lfs
install:
  # Pull lfs files
  # --------------
  - git status
  - git lfs install
  - GIT_TRACE=1 git lfs pull
  - git pull
  - cat tests/test-data/expected-crunching-output/cmip6output/CMIP6/CMIP/BCC/BCC-CSM2-MR/1pctCO2/r1i1p1f1/Amon/rlut/gn/v20181015/netcdf-scm_rlut_Amon_BCC-CSM2-MR_1pctCO2_r1i1p1f1_gn_185001-185912.nc

  # Install miniconda
  # -----------------
  - >
    echo 'Installing miniconda';
    export CONDA_BASE=https://repo.continuum.io/miniconda/Miniconda;
    wget --quiet ${CONDA_BASE}3-latest-Linux-x86_64.sh -O miniconda.sh;
    bash miniconda.sh -b -p $HOME/miniconda;
    export PATH="$HOME/miniconda/bin:$PATH";

  # Create the basic testing environment
  # ------------------------------------
  # Explicitly add defaults channel, see https://github.com/conda/conda/issues/2675
  # Thanks https://stackoverflow.com/a/38609653 for the conda install from file
  # solution
  - >
    echo 'Configure conda and install minimal working environment';
    ENV_NAME='netcdf-scm-test-environment';
    conda config --set always_yes yes;
    conda config --set show_channel_urls True;
    conda config --add channels conda-forge;
    conda update --quiet conda;
    conda create -y -n ${ENV_NAME} python=${TRAVIS_PYTHON_VERSION} pip;
    source activate ${ENV_NAME};

  # Install package and required testing packages
  # ---------------------------------------------
  - >
    make -B venv;

  # Check config before running tests
  # ---------------------------------
  - >
    conda info --envs;
    python --version;
    conda list -n $ENV_NAME;
    conda list -n $ENV_NAME --explicit;
    conda info -a;
    pip list;


script:
  - pytest --cov -r a --cov-report term-missing
  - bash scripts/scratch-process.sh
  # Only test notebooks closely on Python 3.7 otherwise there's too many html errors etc.
  - if [[ $TRAVIS_PYTHON_VERSION == 3.7 ]]; then pytest -rfsxEX --nbval ./notebooks --sanitize ./notebooks/tests_sanitize.cfg; fi
  - if [[ $TRAVIS_PYTHON_VERSION != 3.7 ]]; then pytest -rfsxEX --nbval-lax ./notebooks --sanitize ./notebooks/tests_sanitize.cfg; fi


after_success:
  - codecov
